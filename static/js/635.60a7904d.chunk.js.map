{"version":3,"file":"static/js/635.60a7904d.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder\n  const identifier = String(node.identifier)\n  const index = footnoteOrder.indexOf(identifier)\n  const marker = String(\n    index === -1 ? footnoteOrder.push(identifier) : index + 1\n  )\n\n  return h(\n    node,\n    'a',\n    {\n      href: '#fn' + marker,\n      className: ['footnote-ref'],\n      id: 'fnref' + marker,\n      role: 'doc-noteref'\n    },\n    [h(node.position, 'sup', [u('text', marker)])]\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array.<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    let pos = node.align ? align.length : row.length\n    /** @type {Array.<Content>} */\n    const out = []\n\n    while (pos--) {\n      const cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array.<string>} */\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    // TODO: deprecate `plugins` in v8.0.0.\n    .use(options.remarkPlugins || options.plugins || [])\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","parse","require","iterator","output","hasIterator","len","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","a","apply","instance","Function","setPrototypeOf","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","getPrototypeOf","create","stringifyPosition","point","index","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","Symbol","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","u","props","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","loose","properties","className","footnoteReference","footnoteOrder","id","role","revert","subtype","suffix","contents","listItemLoose","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","root","table","rows","align","row","out","cell","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","backReference","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","PropTypes"],"sourceRoot":""}